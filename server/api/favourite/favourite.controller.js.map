{"version":3,"sources":["api/favourite/favourite.controller.js"],"names":["index","show","userFav","create","upsert","destroy","checkFavourite","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","console","log","send","req","find","exec","resdata","length","message","findById","params","id","catch","userId","user","_id","userReaction","$in","populate","favourite","body","findOneAndUpdate","new","setDefaultsOnInsert","runValidators","findOne","$and","menuItem","resflag","data"],"mappings":"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","file":"favourite.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/favourites              ->  index\n * POST    /api/favourites              ->  create\n * GET     /api/favourites/:id          ->  show\n * PUT     /api/favourites/:id          ->  upsert\n * PATCH   /api/favourites/:id          ->  patch\n * DELETE  /api/favourites/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Favourite from './favourite.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          return res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    console.log('err'+err)\n    res.status(statusCode).send(err);\n  };\n}\n\n\n// Gets a list of Favourites\nexport function index(req, res) {\n  Favourite.find().exec(function(err,resdata){\n    if(err){\n      return handleError(err,res);\n    }\n    if(resdata.length == 0){\n      res.status(200).send({\n        message:'No data found.'\n      })\n    }\n    else{\n      res.json(resdata);\n    }\n  })\n}\n\n// Gets a single Favourite from the DB\nexport function show(req, res) {\n  return Favourite.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a user's liked menuItem from the DB\nexport function userFav(req, res) {\n  var userId = req.user._id;\n  Favourite.find({\"user\":userId,userReaction: { $in: [\"LIKE\"] } }).populate('menuItem','title thumb description price discount').exec(function (err, favourite) {\n    if (err) {\n      return handleError(res, err);\n    }\n    if (!favourite) {\n      return res.status(404).send('Not Found');\n    }\n    return res.json(favourite);\n  });\n}\n\n// Creates a new Favourite in the DB\nexport function create(req, res) {\n console.log('req.body'+JSON.stringify(req.body))\n var favourite = new Favourite(req.body);\n favourite.user = req.user.id;\n favourite.save(function(err){\n  if(err){\n    return handleError(err,res);\n  }\n  res.json(favourite);\n })\n}\n\n// Upserts the given Favourite in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Favourite.findOneAndUpdate({_id: req.params.id}, req.body, {new: true, upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n\n\n\n// Deletes a Favourite from the DB\nexport function destroy(req, res) {\n  Favourite.findOne({$and:[{ user:req.user.id},{menuItem:req.body.menuItem}]},{}).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n\n//check favourite\nexport function checkFavourite(req,res){\n  let resflag = false;\n  return Favourite.find({$and:[{ user:req.user.id},{menuItem:req.body.menuItem}]},{}).exec(function(err,data){\n   if(err){\n    return handleError(res,err);\n    }\n    if(data.length==0){\n      let resdata = {\n        resflag:resflag\n      }\n      res.json(resdata);\n    }\n    if(data.length==1){\n      resflag = true;\n       let resdata = {\n        resflag:resflag\n      }\n       res.json(resdata);\n    }\n  })\n}\n"]}