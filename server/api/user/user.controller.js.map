{"version":3,"sources":["api/user/user.controller.js"],"names":["index","create","createByAdmin","show","destroy","changePassword","resetPassword","me","storeDetails","upsert","accCreateAndTrans","stripePayment","demohtmlpdf","sendResetEmail","ResetPassword","authCallback","async","require","crypto","path","nodemailer","api_key","domain","smtpConfig","host","port","auth","user","pass","transport","createTransport","mailgun","apiKey","validationError","res","statusCode","err","status","json","respondWithResult","entity","handleError","send","req","find","exec","then","users","catch","email","body","emailexists","length","message","newUser","password","provider","image","role","totalLoyaltyPoints","save","waterfall","done","randomBytes","buffer","token","toString","httpTransport","secure","ssl","render","resolve","name","appName","emailHTML","console","log","mailOptions","to","from","subject","html","messages","next","street","city","ZIP","country","phone","sign","_id","secrets","session","expiresIn","userId","params","id","findById","end","profile","findByIdAndRemove","oldPass","String","oldPassword","newPass","newPassword","authenticate","resetToken","findOne","resetPasswordToken","updatedAt","Date","now","storedetails","findOneAndUpdate","new","setDefaultsOnInsert","runValidators","stripe","tokens","card","object","exp_month","month","exp_year","year","number","cardNumber","cvc","customers","source","customer","customerId","carddetail","lastFourDigit","sources","data","last4","charges","amount","currency","charge","fs","pdf","readFileSync","options","format","toFile","randomNo","Math","floor","random","sendMail","error","forgetPasswordNo","work","tokendata","redirect"],"mappings":"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","file":"user.controller.js","sourcesContent":["'use strict';\n\nimport User from './user.model';\nimport config from '../../config/environment';\nimport Carddetail from '../carddetail/carddetail.model';\nimport passport from 'passport';\nimport jwt from 'jsonwebtoken';\n\n// Include NPM \nvar async = require(\"async\");\nvar crypto = require(\"crypto\");\nvar path = require(\"path\");\n\n// Email Config\nvar nodemailer = require('nodemailer');\nvar api_key = 'key-7fa9edb1b8f46cc6d5995448cd733241';\nvar domain = 'impnolife.org';\nvar smtpConfig = {\n    host: 'email-smtp.us-west-2.amazonaws.com',\n    port: 587,\n    //secure: true, // use SSL\n    auth: {\n        user: 'AKIAJQQCVESBWY53KGZA',\n        pass: 'Aq05JPK8+D9QALlP9owzrMMzeiks7o3UvJIZnMP+KsJ+'\n    }\n};\nvar transport = nodemailer.createTransport(smtpConfig);\n//*********************\n\nvar mailgun = require('mailgun-js')({\n  apiKey: api_key, \n  domain: domain\n});\n\n\n\nfunction validationError(res, statusCode) {\n  statusCode = statusCode || 422;\n  return function(err) {\n    return res.status(statusCode).json(err);\n  };\n}\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    return res.status(statusCode).send(err);\n  };\n}\n\n/**\n * Get list of users\n * restriction: 'admin'\n */\nexport function index(req, res) {\n  return User.find({}, '-salt -password').exec()\n    .then(users => {\n      res.status(200).json(users);\n    })\n    .catch(handleError(res));\n}\n\n\n\n\n/**\n * Creates a new user\n */\n/*export function create(req, res) {\n  var newUser = new User(req.body);\n  newUser.provider = 'local';\n  newUser.role = req.body.role || 'user';\n  newUser.save()\n    .then(function(user) {\n      var token = jwt.sign({ _id: user._id }, config.secrets.session, {\n        expiresIn: 60 * 60 * 5\n      });\n      res.json({ token });\n    })\n    .catch(validationError(res));\n}\n*/\n//sign up by user\nexport function create(req, res) {\n  User.find({email:req.body.email},{}).exec(function(err,emailexists){\n    if(err){\n      return handleError(err,res); \n    }\n    if(emailexists.length>0){\n      res.status(400).send({\n        message:'This email already exists,try with different email id.'\n      })\n    }\n    else{\n      var newUser      = new User(req.body);\n      newUser.email    = req.body.email;\n      newUser.password = req.body.password;\n      newUser.provider = 'local';\n      newUser.image    = req.body.image;\n      newUser.role     = req.body.role || 'user';\n      if(newUser.role == 'user'){\n        newUser.totalLoyaltyPoints=0;\n      }\n      newUser.save()\n      .then(function(user) {\n        // var token = jwt.sign({ _id: user._id }, config.secrets.session, {\n        //   expiresIn: 60 * 60 * 5\n        // });\n        //res.json({ token });\n        async.waterfall([\n        // Generate random token\n        function (done) {\n          crypto.randomBytes(20, function (err, buffer) {\n            var token = buffer.toString('hex');\n            done(err, token);\n          });\n        },\n        // Lookup user by username\n        function (token, done, err) {\n          done(err, token, user);\n        },\n        function (token, user, done) {\n          var httpTransport = 'http://';\n          if (config.secure && config.secure.ssl === true) {\n            httpTransport = 'https://';\n          }\n          res.render(path.resolve('server/components/email/welcomeEmail'), {\n            email: user.email,\n            name: user.name,\n            appName: 'Restaurant App',\n          }, function (err, emailHTML) {\n             console.log('111111111333')\n            done(err, emailHTML, user);\n          });\n        },\n        // If valid email, send reset email using service\n        function (emailHTML, user, done) {\n          var mailOptions = {\n            to: user.email,\n            from: 'info@impnolife.org',\n            subject: 'Welcome to Restaurant App',\n            html: emailHTML\n          };\n          mailgun.messages().send(mailOptions, function (err) {\n            if (!err) {\n              res.send({\n                message: 'An email has been sent to the provided email with further instructions.'\n              });\n            } else {\n              return res.status(400).send({\n                message: 'Failure sending email'\n              });\n            }\n            done(err);\n          });\n        }\n        ], function (err) {\n          if (err) {\n            return next(err);\n          }\n        });\n      })\n      .catch(validationError(res));\n    }\n  })\n}\n\n\n//sign up by admin\nexport function createByAdmin(req, res) {\n   console.log('createByAdmin start.................');\n  User.find({email:req.body.email},{}).exec(function(err,emailexists){\n    if(err){\n      return handleError(err,res);\n    }\n    if(emailexists.length>0){\n      res.status(200).send({\n        message:'This email already exists,try with different email id.'\n      })\n    }\n    else{\n      var newUser      = new User();\n      newUser.name     = req.body.name;\n      newUser.email    = req.body.email;\n      newUser.street   = req.body.street;\n      newUser.city     = req.body.city;\n      newUser.ZIP      = req.body.ZIP;\n      newUser.country  = req.body.country;\n      newUser.phone    = req.body.phone;\n      newUser.password = req.body.password;\n      newUser.provider = 'local';\n      newUser.role     = req.body.role || 'user';\n      newUser.save()\n        .then(function(user) {\n          var token = jwt.sign({ _id: user._id }, config.secrets.session, {\n            expiresIn: 60 * 60 * 5\n          });\n          res.json({ token });\n        })\n        .catch(validationError(res));\n    }\n  });\n  \n}\n\n/**\n * Get a single user\n */\nexport function show(req, res, next) {\n  var userId = req.params.id;\n  return User.findById(userId,'name email image phone').exec()\n    .then(user => {\n      if(!user) {\n        return res.status(404).end();\n      }\n      res.json(user.profile);\n    })\n    .catch(err => next(err));\n}\n\n/**\n * Deletes a user\n * restriction: 'admin'\n */\nexport function destroy(req, res) {\n  return User.findByIdAndRemove(req.params.id).exec()\n    .then(function() {\n      res.status(204).end();\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Change a users password\n */\nexport function changePassword(req, res) {\n  var userId  = req.user._id;\n  var oldPass = String(req.body.oldPassword);\n  var newPass = String(req.body.newPassword);\n\n  return User.findById(userId).exec()\n    .then(user => {\n      if(user.authenticate(oldPass)) {\n        user.password = newPass;\n        return user.save()\n          .then(() => {\n            res.status(204).end();\n          })\n          .catch(validationError(res));\n      } else {\n        return res.status(403).end();\n      }\n    });\n}\n\n/* Reset Password */\nexport function resetPassword(req, res, next) {\n  // Init Variables\n  var resetToken = req.body.resetToken;\n  var newPass = req.body.newPassword;\n  User.findOne({resetPasswordToken:resetToken}, function (err,user) {\n    \n    user.password = newPass;\n    user.updatedAt = new Date(Date.now());\n\n    // Not User Error\n    if (!user) {\n      return res.status(400).send({\n        message: 'User not found!'\n      });\n    }\n\n    // Save User \n    user.save(function (err) {\n      if (err) {\n        return handleError(res);\n      } else {\n        return res.status(200).send({\n          message: 'Password Changed Successfully!!'\n        });\n      }\n    });\n\n  });\n}\n\n\n/**\n * Get my info\n */\nexport function me(req, res, next) {\n  var userId = req.user._id;\n  console.log('req.user'+JSON.stringify(req.user))\n  return User.findOne({ _id: userId }, '-salt -password').exec()\n    .then(user => { // don't ever give out the password or salt\n      if(!user) {\n        return res.status(401).end();\n      }\n      res.json(user);\n    })\n    .catch(err => next(err));\n}\n\n\n//Detailed info of  a store\nexport function storeDetails(req,res){\n  User.find({role:'admin'}, '-salt -password').exec(function(err,storedetails){\n    if(err){\n      return handleError(err,res);\n    }\n    else{\n      res.json(storedetails[0]);\n    }\n  })\n}\n\n\n// Upserts the given user in the DB at the specified ID\nexport function upsert(req, res) {\n  console.log('req.user'+JSON.stringify(req.user))\n  console.log('req.body'+JSON.stringify(req.body))\n  return User.findOneAndUpdate({_id: req.params.id}, req.body, {new: true, upsert: true, setDefaultsOnInsert: true, runValidators: false}).exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// //get stripe token\n// export function accCreateAndTrans(req, res, next) {\n//   console.log('req.body'+JSON.stringify(req.body))\n//   var stripe = require(\"stripe\")(\n//     \"sk_test_BQokikJOvBiI2HlWgH4olfQ2\"\n//   );\n//   stripe.tokens.create({\n//     card: {\n//       object: 'card',\n//       exp_month: req.body.month,\n//       exp_year: req.body.year,\n//       number: req.body.cardNumber,\n//       cvc: req.body.cvc//100'4242 4242 4242 4242',\n//     }\n//   }, function(err, token) {\n//     if(err){\n//      return handleError(err,res)\n//     }\n//     else{\n//       //got token id\n//       console.log('token'+JSON.stringify(token))\n//       // Create a Customer:\n//       stripe.customers.create({\n//         email: req.user.email,//\"shubh037@gmail.com\",\n//         source: token.id//'tok_1At9Xi2eZvKYlo2CVhMEj8Io',//token id\n//       }).then(function(customer) {\n//         var  customerId ={\n//           customerId:customer.id\n//         } \n//         let carddetail           = new Carddetail();\n//         carddetail.user          = req.user._id;\n//         carddetail.lastFourDigit = customer.sources.data[0].last4;\n//         carddetail.customerId    = customer.id;\n//         carddetail.save(function(err){\n//           if(err){\n//             return handleError(err,res);\n//           }\n//           else{\n//             res.json(customerId)\n//           }\n//         })\n//       })\n//     }\n//   })\n// }\n\n//get stripe token\nexport function accCreateAndTrans(req, res, next) {\n  var stripe = require(\"stripe\")(\n    \"sk_test_BQokikJOvBiI2HlWgH4olfQ2\"\n  );\n  stripe.tokens.create({\n    card: {\n      object:   'card',\n      exp_month:req.body.month,\n      exp_year: req.body.year,\n      number:   req.body.cardNumber,\n      cvc:      req.body.cvc//100'4242 4242 4242 4242',\n    }\n  }, function(err, token) {\n    if(err){\n     return handleError(err,res)\n    }\n    else{\n      //got token id\n      console.log('token'+JSON.stringify(token))\n      // Create a Customer:\n      stripe.customers.create({\n        email: req.user.email,//\"shubh037@gmail.com\",\n        source: token.id//'tok_1At9Xi2eZvKYlo2CVhMEj8Io',//token id\n      }).then(function(customer) {\n        var  customerId ={\n          customerId:customer.id\n        } \n        let carddetail           = new Carddetail();\n        carddetail.user          = req.user._id;\n        carddetail.lastFourDigit = customer.sources.data[0].last4;\n        carddetail.customerId    = customer.id;\n        carddetail.save(function(err){\n          if(err){\n            return handleError(err,res);\n          }\n          else{\n            res.json(customerId)\n          }\n        })\n      })\n    }\n  })\n}\n//stripe payment\nexport function stripePayment(req,res){\n  console.log('req.body'+JSON.stringify(req.body))\n  var stripe = require(\"stripe\")(\n    \"sk_test_BQokikJOvBiI2HlWgH4olfQ2\"\n  );\n  stripe.charges.create({\n    amount: req.body.amount,\n    currency: \"usd\",\n    customer: req.body.customerId,//'cus_BFesiWxNtkgF6G',//customer id\n  })\n  .then(function(charge) {\n    res.status(200).send({\n\n      message:'Thank you,Your transaction was successful.'\n    })\n  });\n}\n\n//sign up by user\nexport function demohtmlpdf(req, res) {\n  var fs = require('fs');\nvar pdf = require('html-pdf');\nvar html = fs.readFileSync('./server/components/email/welcomeEmail.html', 'utf8');\nvar options = { format: 'Letter' };\n  console.log('qwertyuiop.................')\n  pdf.create(html, options).toFile('./businesscard.pdf', function(err, res) {\n    if (err) return console.log(err);\n    console.log(res); // { filename: '/app/businesscard.pdf' }\n  });\n}\n\n//resend Password\nexport function sendResetEmail(req, res) {\n  var email = req.body.email;\n  User.findOne({'email': email}).exec(function(err,user){\n    //console.log(\"wwwwww\"+user);\n    if(err)\n    {\n     return handleError(res);\n    }\n      if(!user) {\n           return res.status(404).send({\n             message:'There is no User with this email id.'\n           });\n        }\n        var randomNo= Math.floor( Math.random() * 900000) + 100000;\n        //console.log(\"rrrr\"+randomNo);\n        transport.sendMail({\n         from: 'info@elysiot.com',\n         to: email,\n         subject: 'Reset Password Verification Code - OTP',\n         html:'Your Reset Password OTP Is : '+randomNo\n       },function(error, data){\n         if(error){\n           console.log(error + \"error\")\n         }\n         if(data){\n           //update\n          \n            \n            user.forgetPasswordNo = randomNo;\n            //console.log('forgetPasswordNo'+JSON.stringify(user) )\n             user.save(function(err,work) {\n              if(err)\n              {\n                return handleError(res);\n              }\n\n                       console.log(\"user\"+JSON.stringify(work))   \n                       var token = jwt.sign({ _id: user._id }, config.secrets.session, {\n                         expiresIn: 60 * 60 * 5\n                       });\n                \n                   \n                 return res.status(200).send({\n                   message:'Email exist. OTP sent on email/phone'\n                 });\n             });\n         }\n       })\n  })\n}    \n//****************************************\nexport function ResetPassword(req, res) {\n  var email = req.body.email;\n  var forgetPasswordNo=req.body.forgetPasswordNo;\n  var newPassword=req.body.newPass;\n  User.findOne({'email': email}, '-salt -password').\n     exec(function(err,users){\n       if(err){\n          console.log('err'+ err);\n            res.status(400).send({\n             message:'Something went wrong.'\n            })\n        }\n       else{\n        console.log('qwertyuio.........'+JSON.stringify(users));\n              if(users.forgetPasswordNo ==forgetPasswordNo){\n                  users.password =newPassword;\n                  users.forgetPasswordNo = Math.floor( Math.random() * 900000) + 100000;\n                    return users.save(function(err,users){\n                       if(err)\n                         {\n                           return handleError(res);\n                         }\n                          var token = jwt.sign({ _id: users._id }, \n                            config.secrets.session, {\n                           expiresIn: 60 * 60 * 5\n                          })\n                          let tokendata = {\n                              token:token,\n                              message:\"new password sucessfully updated\"\n                          }\n                          console.log('token'+JSON.stringify(tokendata))\n                          res.json(tokendata);\n                    })\n                       \n              }\n              else{\n                res.status(400).send({\n                  message:\"otp mismatched\"\n                });\n              }\n        }\n \n  \n  }) \n}\n/**\n * Authentication callback\n */\nexport function authCallback(req, res) {\n  res.redirect('/');\n}\n"]}