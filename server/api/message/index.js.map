{"version":3,"sources":["api/message/index.js"],"names":["express","require","controller","auth","router","Router","post","isAuthenticated","create","get","count","markRead","userIndex","userChat","sellerIndex","sellerChat","updateCount","module","exports"],"mappings":"AAAA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,aAAaD,QAAQ,sBAAR,CAAjB;AACA,IAAIE,OAAWF,QAAQ,yBAAR,CAAf;AACA,IAAIG,SAASJ,QAAQK,MAAR,EAAb;;AAEA;AACA;AACA;AACAD,OAAOE,IAAP,CAAY,GAAZ,EAAiBH,KAAKI,eAAL,EAAjB,EAAwCL,WAAWM,MAAnD;AACA;AACA;;AAEA;AACAJ,OAAOK,GAAP,CAAW,gBAAX,EAA6BN,KAAKI,eAAL,EAA7B,EAAqDL,WAAWQ,KAAhE;;AAEC;AACDN,OAAOK,GAAP,CAAW,YAAX,EAAyBN,KAAKI,eAAL,EAAzB,EAAiDL,WAAWS,QAA5D;AACA;AACA;AACAP,OAAOK,GAAP,CAAW,GAAX,EAAgBN,KAAKI,eAAL,EAAhB,EAAwCL,WAAWU,SAAnD;;AAEA;AACCR,OAAOK,GAAP,CAAW,WAAX,EAAwBN,KAAKI,eAAL,EAAxB,EAAgDL,WAAWW,QAA3D;;AAED;AACA;AACA;AACAT,OAAOK,GAAP,CAAW,gBAAX,EAA6BN,KAAKI,eAAL,EAA7B,EAAqDL,WAAWY,WAAhE;AACA;AACA;AACAV,OAAOK,GAAP,CAAW,MAAX,EAAmBN,KAAKI,eAAL,EAAnB,EAA2CL,WAAWa,UAAtD;AACA;AACAX,OAAOK,GAAP,CAAW,sBAAX,EAAmCN,KAAKI,eAAL,EAAnC,EAA2DL,WAAWc,WAAtE;;AAGAC,OAAOC,OAAP,GAAiBd,MAAjB","file":"index.js","sourcesContent":["// 'use strict';\n\n// var express = require('express');\n// var controller = require('./message.controller');\n\n// var router = express.Router();\n\n// router.get('/', controller.index);\n// router.get('/:id', controller.show);\n// router.post('/', controller.create);\n// router.put('/:id', controller.upsert);\n// router.patch('/:id', controller.patch);\n// router.delete('/:id', controller.destroy);\n\n// module.exports = router;\n\n'use strict';\n\nvar express = require('express');\nvar controller = require('./message.controller');\nvar auth \t   = require('../../auth/auth.service');\nvar router = express.Router();\n  \n//******************AUTH REQUIRED****************************//\n//**********************************************************//\n//crete a message\nrouter.post('/', auth.isAuthenticated(),controller.create);\n//router.get('/:id', auth.isAuthenticated(), controller.messageById);\n//router.get('/counts/:flag/', auth.isAuthenticated(), controller.count);\n  \n//to get number of unread messages for seller flag should be 1 and for user 0 \nrouter.get('/counts/:flag/', auth.isAuthenticated(), controller.count);\n \n //mark all unread messages of a single seller  to true  \nrouter.get('/mark/read', auth.isAuthenticated(), controller.markRead);\n/**************************   User Access  *****************************/\n//get a list of seller who had ever contacted through a user\nrouter.get('/', auth.isAuthenticated(), controller.userIndex);\n\n//In below route,:id is sellerID\n router.get('/user/:id', auth.isAuthenticated(), controller.userChat);\n\n/**************************   Seller Access  *****************************/\n//get a list of user who had ever contacted through a seller\n//Micra App - Employee - WF - 26 message detail\nrouter.get('/seller/index/', auth.isAuthenticated(), controller.sellerIndex);\n//In below route,:id is userID\n//Micra App - Employee - WF - 27 chat page\nrouter.get('/:id', auth.isAuthenticated(), controller.sellerChat);\n//DEV\nrouter.get('/update/byseller/:id', auth.isAuthenticated(), controller.updateCount);\n\n\nmodule.exports = router;\n"]}