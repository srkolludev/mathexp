{"version":3,"sources":["api/tag/tag.events.js"],"names":["TagEvents","setMaxListeners","events","e","event","schema","post","emitEvent","doc","emit","_id"],"mappings":"AAAA;;;;AAIA;;;;;;AAEA;;AACA;;;;;;AACA,IAAIA,YAAY,0BAAhB;;AAEA;AACAA,UAAUC,eAAV,CAA0B,CAA1B;;AAEA;AACA,IAAIC,SAAS;AACX,UAAQ,MADG;AAEX,YAAU;AAFC,CAAb;;AAKA;AACA,KAAK,IAAIC,CAAT,IAAcD,MAAd,EAAsB;AACpB,MAAIE,QAAQF,OAAOC,CAAP,CAAZ;AACA,gBAAIE,MAAJ,CAAWC,IAAX,CAAgBH,CAAhB,EAAmBI,UAAUH,KAAV,CAAnB;AACD;;AAED,SAASG,SAAT,CAAmBH,KAAnB,EAA0B;AACxB,SAAO,UAASI,GAAT,EAAc;AACnBR,cAAUS,IAAV,CAAeL,QAAQ,GAAR,GAAcI,IAAIE,GAAjC,EAAsCF,GAAtC;AACAR,cAAUS,IAAV,CAAeL,KAAf,EAAsBI,GAAtB;AACD,GAHD;AAID;;kBAEcR,S","file":"tag.events.js","sourcesContent":["/**\n * Tag model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nimport Tag from './tag.model';\nvar TagEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nTagEvents.setMaxListeners(0);\n\n// Model events\nvar events = {\n  'save': 'save',\n  'remove': 'remove'\n};\n\n// Register the event emitter to the model events\nfor (var e in events) {\n  var event = events[e];\n  Tag.schema.post(e, emitEvent(event));\n}\n\nfunction emitEvent(event) {\n  return function(doc) {\n    TagEvents.emit(event + ':' + doc._id, doc);\n    TagEvents.emit(event, doc);\n  }\n}\n\nexport default TagEvents;\n"]}