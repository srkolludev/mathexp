{"version":3,"sources":["api/booktable/booktable.controller.js"],"names":["index","singleUserBookings","show","create","upsert","patch","destroy","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","find","exec","resdata","length","message","user","_id","populate","catch","findById","params","id","booktable","body","datedata","Date","now","userNotification","push","findOneAndUpdate","new","setDefaultsOnInsert","runValidators"],"mappings":"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","file":"booktable.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/booktables              ->  index\n * POST    /api/booktables              ->  create\n * GET     /api/booktables/:id          ->  show\n * PUT     /api/booktables/:id          ->  upsert\n * PATCH   /api/booktables/:id          ->  patch\n * DELETE  /api/booktables/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Booktable from './booktable.model';\nimport Order from '../order/order.model';\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n\n// Gets a list of Booktables\nexport function index(req, res) {\n  Booktable.find().exec(function(err,resdata){\n    if(err){\n      return handleError(err,res);\n    }\n    if(resdata.length == 0){\n      res.status(200).send({\n        message:'No data found.'\n      })\n    }\n    else{\n      res.json(resdata);\n    }\n  })\n}\n\n\n// Gets a list of Booktables\nexport function singleUserBookings(req, res) {\n  return Booktable.find({'user':req.user._id},{}).populate('user','-salt -password').exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Booktable from the DB\nexport function show(req, res) {\n  return Booktable.findById(req.params.id).populate('user','-salt -password').exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Booktable in the DB\nexport function create(req, res) {\n  let booktable  = new Booktable(req.body);\n  booktable.user = req.user._id;\n  let datedata   = new Date();\n  datedata       =  Date.now();\n  booktable.userNotification.push({'status':'Thank you for your booking.' ,\n  'time':datedata});\n  booktable.save(function(err){\n    if(err){\n      return handleError(err,res);\n    }\n    else{\n      res.status(200).send({\n        message:'Your request has been raised.'\n      })\n    }\n  })\n}\n\n// Upserts the given Booktable in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  Booktable.findById(req.params.id).exec(function(err,booktable){\n    let datedata = new Date();\n    datedata =  Date.now();\n    //while owner acceped request\n    if(req.body.status == 'Accepted'){\n     booktable.userNotification.push({'status':'Booking Accepted.','time':datedata}) \n    }\n    //while owner rejected request\n    if(req.body.status == 'Rejected'){\n     booktable.userNotification.push({'status':'Your booking is cancelled,sorry for inconvenience.','time':datedata}) \n    }\n    booktable.save(function(err){\n      if(err){\n       return handleError(res);\n      }\n      else{\n        Booktable.findOneAndUpdate({_id: req.params.id}, req.body, {new: true, upsert: true, setDefaultsOnInsert: true, runValidators: false}).exec()\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n      }\n    })\n  })\n}\n\n// Updates an existing Booktable in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Booktable.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Booktable from the DB\nexport function destroy(req, res) {\n  return Booktable.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}