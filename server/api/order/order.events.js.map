{"version":3,"sources":["api/order/order.events.js"],"names":["OrderEvents","UserEvents","console","log","setMaxListeners","events","save","remove","registerEvents","Orders","e","event","post","emitEvent","doc","notification","order","_id","orderID","priceGrandTotal","grandTotal","err","res","status","send","message","notifyObj","readNotification","createdAt","emit"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAIA;;;AAGA;;;;;;;AACA;;AACA;;;;AAGA;;;;;;AAFA,IAAIA,cAAc,0BAAlB;AACA,IAAIC,aAAa,0BAAjB;;;AAGA;AACAC,QAAQC,GAAR,CAAY,aAAZ;AACA;AACAH,YAAYI,eAAZ,CAA4B,CAA5B;AACAH,WAAWG,eAAX,CAA2B,CAA3B;AACA;AACA,IAAIC,SAAS;AACXC,QAAM,MADK;AAEXC,UAAQ;AAFG,CAAb;;AAKA;AACA,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AAC9B,OAAI,IAAIC,CAAR,IAAaL,MAAb,EAAqB;AACnB,QAAIM,QAAQN,OAAOK,CAAP,CAAZ;AACAR,YAAQC,GAAR,CAAY,OAAZ;AACAD,YAAQC,GAAR,CAAYQ,QAAQ,2BAApB;AACAF,WAAOG,IAAP,CAAYF,CAAZ,EAAeG,UAAUF,KAAV,CAAf;AACD;AACF;;AAED,SAASE,SAAT,CAAmBF,KAAnB,EAA0B;AACxB,SAAO,UAASG,GAAT,EAAc;AACnB;AACA,QAAIC,eAAe,4BAAnB;AACAA,iBAAaC,KAAb,GAAqBF,IAAIG,GAAzB;AACAF,iBAAaG,OAAb,GAAuBJ,IAAII,OAA3B;AACAH,iBAAaI,eAAb,GAA+BL,IAAIM,UAAnC;AACAL,iBAAaT,IAAb,CAAkB,UAAUe,GAAV,EAAe;AAC/B,UAAIA,GAAJ,EAAS;AACP,eAAOC,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS;AADiB,SAArB,CAAP;AAGD,OAJD,MAIO;AACL,YAAIC,YAAY;AACdT,eAAIF,aAAaE,GADH;AAEdU,4BAAiBZ,aAAaY,gBAFhB;AAGdX,iBAAMF,IAAIG,GAHI;AAIdC,mBAAQJ,IAAII,OAJE;AAKdC,2BAAgBL,IAAIM,UALN;AAMdQ,qBAAUd,IAAIc;AANA,SAAhB;AAQA1B,gBAAQC,GAAR,CAAY,aAAZ;AACA;AACAH,oBAAY6B,IAAZ,CAAiBlB,KAAjB,EAAuBe,SAAvB;AACD;AACF,KAlBD;AAmBA;AACA;AACD,GA3BD;AA4BD;;QAEOlB,c,GAAAA,c;kBACOR,W","file":"order.events.js","sourcesContent":["// /**\n//  * Order model events\n//  */\n\n// 'use strict';\n\n// import {EventEmitter} from 'events';\n// import Order from './order.model';\n// var OrderEvents = new EventEmitter();\n\n// // Set max event listeners (0 == unlimited)\n// OrderEvents.setMaxListeners(0);\n\n// // Model events\n// var events = {\n//   save: 'save',\n//   remove: 'remove'\n// };\n\n// // Register the event emitter to the model events\n// for(var e in events) {\n//   let event = events[e];\n//   Order.schema.post(e, emitEvent(event));\n// }\n\n// function emitEvent(event) {\n//   return function(doc) {\n//     OrderEvents.emit(event + ':' + doc._id, doc);\n//     OrderEvents.emit(event, doc);\n//   };\n// }\n\n// export default OrderEvents;\n\n\n\n/**\n * Orders model events\n */\n'use strict';\nimport {EventEmitter} from 'events';\nimport Order from './order.model';\nvar OrderEvents = new EventEmitter();\nvar UserEvents = new EventEmitter();\nimport Notification from '../notification/notification.model';\n\n//var userEvents = new EventEmitter();\nconsole.log('hello@@@@@@');\n// Set max event listeners (0 == unlimited)\nOrderEvents.setMaxListeners(0);\nUserEvents.setMaxListeners(0);\n// Model events\nvar events = {\n  save: 'save',\n  remove: 'remove'\n};\n\n// Register the event emitter to the model events\nfunction registerEvents(Orders) {\n  for(var e in events) {\n    let event = events[e];\n    console.log('hello')\n    console.log(event + \"---------event-----------\")\n    Orders.post(e, emitEvent(event));\n  }\n}\n\nfunction emitEvent(event) {\n  return function(doc) {\n    //console.log(doc +'-----------------------------------------')\n    var notification = new Notification()\n    notification.order = doc._id;\n    notification.orderID = doc.orderID;\n    notification.priceGrandTotal = doc.grandTotal;\n    notification.save(function (err) {\n      if (err) {\n        return res.status(400).send({\n          message: 'Something Wrong'\n        });\n      } else { \n        let notifyObj = {\n          _id:notification._id,\n          readNotification:notification.readNotification,\n          order:doc._id,\n          orderID:doc.orderID,\n          priceGrandTotal:doc.grandTotal,\n          createdAt:doc.createdAt\n        }\n        console.log('hello000000')\n        //UserEvents.emit('notify',notifyObj);\n        OrderEvents.emit(event,notifyObj);\n      }\n    });\n    // OrderEvents.emit(event + ':' + doc._id, doc);\n    // OrderEvents.emit(event, doc);\n  }\n} \n\nexport {registerEvents};\nexport default OrderEvents;\n\n"]}