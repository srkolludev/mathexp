{"version":3,"sources":["api/order/order.socket.js"],"names":["demo","register","createNotifyListener","events","save","notify","receiverSocketId","socket","event","notifyListner","on","doc","emit","removeListener","listener"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAIA;AACA;AACA;;;;;QAQgBA,I,GAAAA,I;QAKAC,Q,GAAAA,Q;QAMAC,oB,GAAAA,oB;;AAlBhB;;;;;;AAEA;AACA,IAAIC,SAAS;AACXC,QAAM;AADK,CAAb;AAGA,IAAIC,MAAJ;AACO,SAASL,IAAT,CAAcM,gBAAd,EAAgC;AACrC;AACD;AACA;AACA;AACM,SAASL,QAAT,CAAkBM,MAAlB,EAA0B;AAC/B;AACC,MAAIC,QAAQL,OAAOC,IAAnB;AACC,MAAIK,gBAAgBP,qBAAqBK,MAArB,CAApB;AACA,kBAAYG,EAAZ,CAAeF,KAAf,EAAqBC,aAArB;AACD;AACI,SAASP,oBAAT,CAA8BK,MAA9B,EAAsC;AAC3C,SAAO,UAASI,GAAT,EAAc;AACnBJ,WAAOK,IAAP,CAAY,QAAZ,EAAsBD,GAAtB;AACD,GAFD;AAGD;;AAED,SAASE,cAAT,CAAwBN,MAAxB,EAAgCC,KAAhC,EAAuCM,QAAvC,EAAiD;AAC/C,SAAO,YAAW;AAChBP,WAAOM,cAAP,CAAsBL,KAAtB,EAA6BM,QAA7B;AACD,GAFD;AAGD;;AAED;AACA;AACA","file":"order.socket.js","sourcesContent":["// /**\n//  * Broadcast updates to client when the model changes\n//  */\n\n// 'use strict';\n\n// import OrderEvents from './order.events';\n\n// // Model events to emit\n// var events = ['save', 'remove'];\n\n// export function register(socket) {\n//   // Bind model events to socket events\n//   for(var i = 0, eventsLength = events.length; i < eventsLength; i++) {\n//     var event = events[i];\n//     var listener = createListener(`order:${event}`, socket);\n\n//     OrderEvents.on(event, listener);\n//     socket.on('disconnect', removeListener(event, listener));\n//   }\n// }\n\n\n// function createListener(event, socket) {\n//   return function(doc) {\n//     socket.emit(event, doc);\n//   };\n// }\n\n// function removeListener(event, listener) {\n//   return function() {\n//     OrderEvents.removeListener(event, listener);\n//   };\n// }\n\n\n\n'use strict';\n//var count =1;\n//\nimport OrderEvents from './order.events';\n \n// Model events to emit\nvar events = {\n  save: 'save' \n};\nvar notify;\nexport function demo(receiverSocketId) {\n  // Bind model events to socket events\n // receiverSocketIds = receiverSocketId;\n // console.log('Conected array222:' + JSON.stringify(receiverSocketId));\n}\nexport function register(socket) {\n  // Bind model events to socket events\n   var event = events.save;\n    var notifyListner = createNotifyListener(socket);\n    OrderEvents.on(event,notifyListner);\n  }\nexport function createNotifyListener(socket) {\n  return function(doc) {\n    socket.emit('notify', doc);\n  };\n}\n\nfunction removeListener(socket ,event, listener) {\n  return function() {\n    socket.removeListener(event, listener);\n  };\n}\n\n// export function ajay(xyz){\n// console.log('xyz'+xyz);\n// }"]}