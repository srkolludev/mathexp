{"version":3,"sources":["api/booktable/booktable.events.js"],"names":["BooktableEvents","setMaxListeners","events","save","remove","registerEvents","Booktable","e","event","post","emitEvent","doc","emit","_id"],"mappings":"AAAA;;;;AAIA;;;;;;;AAEA;;AACA,IAAIA,kBAAkB,0BAAtB;;AAEA;AACAA,gBAAgBC,eAAhB,CAAgC,CAAhC;;AAEA;AACA,IAAIC,SAAS;AACXC,QAAM,MADK;AAEXC,UAAQ;AAFG,CAAb;;AAKA;AACA,SAASC,cAAT,CAAwBC,SAAxB,EAAmC;AACjC,OAAI,IAAIC,CAAR,IAAaL,MAAb,EAAqB;AACnB,QAAIM,QAAQN,OAAOK,CAAP,CAAZ;AACAD,cAAUG,IAAV,CAAeF,CAAf,EAAkBG,UAAUF,KAAV,CAAlB;AACD;AACF;;AAED,SAASE,SAAT,CAAmBF,KAAnB,EAA0B;AACxB,SAAO,UAASG,GAAT,EAAc;AACnBX,oBAAgBY,IAAhB,CAAqBJ,QAAQ,GAAR,GAAcG,IAAIE,GAAvC,EAA4CF,GAA5C;AACAX,oBAAgBY,IAAhB,CAAqBJ,KAArB,EAA4BG,GAA5B;AACD,GAHD;AAID;;QAEON,c,GAAAA,c;kBACOL,e","file":"booktable.events.js","sourcesContent":["/**\n * Booktable model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nvar BooktableEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nBooktableEvents.setMaxListeners(0);\n\n// Model events\nvar events = {\n  save: 'save',\n  remove: 'remove'\n};\n\n// Register the event emitter to the model events\nfunction registerEvents(Booktable) {\n  for(var e in events) {\n    let event = events[e];\n    Booktable.post(e, emitEvent(event));\n  }\n}\n\nfunction emitEvent(event) {\n  return function(doc) {\n    BooktableEvents.emit(event + ':' + doc._id, doc);\n    BooktableEvents.emit(event, doc);\n  };\n}\n\nexport {registerEvents};\nexport default BooktableEvents;\n"]}