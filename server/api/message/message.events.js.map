{"version":3,"sources":["api/message/message.events.js"],"names":["MessageEvents","userEvents","setMaxListeners","events","save","remove","registerEvents","Message","e","event","post","emitEvent","doc","dataObj","count","sentBy","find","sender","receiver","exec","err","messages","i","length","userRead","id","receiverRead","findById","data","res","status","send","message","console","log","_id","name","timestamp","lastMessage","fileUrl","fileName","fileType","emit"],"mappings":"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","file":"message.events.js","sourcesContent":["// /**\n//  * Message model events\n//  */\n\n// 'use strict';\n\n// import {EventEmitter} from 'events';\n// var MessageEvents = new EventEmitter();\n\n// // Set max event listeners (0 == unlimited)\n// MessageEvents.setMaxListeners(0);\n\n// // Model events\n// var events = {\n//   save: 'save',\n//   remove: 'remove'\n// };\n\n// // Register the event emitter to the model events\n// function registerEvents(Message) {\n//   for(var e in events) {\n//     let event = events[e];\n//     Message.post(e, emitEvent(event));\n//   }\n// }\n\n// function emitEvent(event) {\n//   return function(doc) {\n//     MessageEvents.emit(event + ':' + doc._id, doc);\n//     MessageEvents.emit(event, doc);\n//   };\n// }\n\n// export {registerEvents};\n// export default MessageEvents;\n/**\n * Message model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nvar MessageEvents = new EventEmitter();\nvar userEvents = new EventEmitter();\n\nimport Message from './message.model';\nimport User from '../user/user.model';\n// Set max event listeners (0 == unlimited)\nMessageEvents.setMaxListeners(0);\nuserEvents.setMaxListeners(0);\n \n\n// Model events\nvar events = {\n  save: 'save',\n  remove: 'remove'\n};\n// Register the event emitter to the model events\nfunction registerEvents(Message) {\n  for(var e in events) {\n    let event = events[e];\n    Message.post(e, emitEvent(event));\n  }\n}\n\nfunction emitEvent(event) {\n  return function(doc) {\n    let dataObj = {};\n    let count = 0;\n    if(doc.sentBy == 'receiver')\n    {\n      Message.find({\"sender\":doc.sender,\"receiver\":doc.receiver}).exec(function (err, messages){\n        for (var i = 0; i < messages.length; i++) {\n          if(messages[i].userRead === false)\n          {\n            count++;\n          }\n        }\n        dataObj = {\n          id:doc.sender,\n          count:count\n        }\n      });\n    }\n    if(doc.sentBy == 'sender')\n    {\n      Message.find({\"receiver\":doc.receiver,\"sender\":doc.sender}).exec(function (err, messages){\n        for (var i = 0; i < messages.length; i++) {\n          if(messages[i].receiverRead === false)\n          {\n            count++;\n          }\n        }\n        User.findById(doc.sender).exec(function(err,data){\n          if(err){\n            res,status(400).send({\n              message:'Bad request.'\n            })\n          }\n          else{\n            console.log('docfile------------------'+JSON.stringify(doc));\n            dataObj = {\n              _id:doc.sender,\n              receiver:doc.receiver,\n              name:data.name,\n              count:count,\n              timestamp:doc.timestamp,\n              lastMessage:doc.message,\n              fileUrl:doc.fileUrl,\n              fileName:doc.fileName,\n              fileType:doc.fileType,\n              //email:data.email,\n              //name:data.name\n            }\n            MessageEvents.emit(event,dataObj);\n          }\n        })\n      });\n    }\n    MessageEvents.emit(event + ':' + doc._id, doc);\n    MessageEvents.emit(event, doc);\n  };\n}\n\nexport {registerEvents};\nexport default MessageEvents;\n\n\n\n\n /**\n * Message model events\n */ \n\n"]}