{"version":3,"sources":["api/setting/setting.model.js"],"names":["SchemeConfig","Schema","scheme","String","enum","values","grade","exam","choice","review","type","timeout","clock","none","default","Boolean","downTimerExam","downTimerQuestion","upTimerExam","upTimerQuestion","_id","SettingSchema","userid","unique","app","homepage","level","settype","dev","Types","Mixed","schemeOptions","createdAt","Date","now","updatedAt","model"],"mappings":"AAAA;;;;;;AAEA;;;;;;AAIA,IAAIA,eAAe,IAAI,mBAASC,MAAb,CACjB;AACEC,UAAS;AACL,YAAQC,MADH;AAEJC,UAAM;AACJC,cAAQ,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,EAAsB,MAAtB;AADJ;AAFF,GADX;AAOEC,SAAO;AACH,YAAQH;AADL,GAPT;AAUEI,QAAM;AACF,YAAQJ;AADN,GAVR;AAaEK,UAAO,CAAC;AACR,YAAQL,MADA;AAERC,UAAK,CAAC,UAAD,EAAa,WAAb,EAA0B,SAA1B,EAAoC,gBAApC;AAFG,GAAD,CAbT;AAiBEK,UAAQ;AACRC,UAAKP,MADG;AAEV;AACEC,UAAK,CAAC,QAAD,EAAW,YAAX;AAHG,GAjBV;AAsBEO,WAAS;AACTD,UAAKP,MADI;AAEX;AACEC,UAAK,CAAC,QAAD,EAAW,YAAX;AAHI,GAtBX;AA2BAQ,SAAO;AACLC,UAAO;AACHC,eAAQ,KADL;AAEHJ,YAAMK;AAFH,KADF;AAKJC,mBAAgB;AACbF,eAAQ,KADK;AAEbJ,YAAMK;AAFO,KALZ;AASJE,uBAAoB;AACjBH,eAAQ,KADS;AAEjBJ,YAAMK;AAFW,KAThB;AAaJG,iBAAc;AACXJ,eAAQ,KADG;AAEXJ,YAAMK;AAFK,KAbV;AAiBJI,qBAAkB;AACfL,eAAQ,KADO;AAEfJ,YAAMK;AAFS;AAjBd,GA3BP;AAiDGK,OAAM;AAjDT,CADiB,CAAnB;;AAsDA,IAAIC,gBAAgB,IAAI,mBAASpB,MAAb,CAAoB;AACtCqB,UAAQ;AACAZ,UAAKP,MADL;AAEAoB,YAAO;;AAFP,GAD8B;AAMtCC,OAAK;AACDtB,YAAO,CAAC;AACJQ,YAAKP,MADD;AAEN;AACEC,YAAM,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,EAAsB,MAAtB;AAHF,KAAD,CADN;AAMDE,WAAM,CAAC;AACHI,YAAKP,MADF;AAEN;AACGC,YAAM,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb;AAHH,KAAD,CANL;AAWCG,UAAM,CAAC;AACPG,YAAKP,MADE;AAER;AACCC,YAAM,CAAC,KAAD,EAAO,MAAP,EAAc,OAAd,EAAsB,KAAtB;AAHC,KAAD,CAXP;AAgBCqB,cAAW;AACXf,YAAKP,MADM;AAEd;AACGC,YAAM,CAAC,OAAD,EAAS,MAAT;AAHK,KAhBZ;AAqBDsB,WAAQ;AACNhB,YAAKP,MADC;AAET;AACGC,YAAM,CAAC,KAAD,EAAO,KAAP;AAHA,KArBP;AA0BDuB,aAAU;AACRjB,YAAKP,MADG;AAEV;AACEC,YAAM,CAAC,QAAD,EAAU,MAAV;AAHE;AA1BT,GANiC;AAsCtCwB,OAAK,iBAAOC,KAAP,CAAaC,KAtCoB,EAsCb;;AAEzBC,iBAAe,CAAC/B,YAAD,CAxCuB;;AA0CtCgC,aAAW;AACTtB,UAAMuB,IADG;AAETnB,aAASmB,KAAKC;AAFL,GA1C2B;AA8CtCC,aAAW;AACTzB,UAAMuB;AADG;AA9C2B,CAApB,CAApB;;AAoDA;;;;;;;;;;;;;;;;;;;;;kBAsBe,mBAASG,KAAT,CAAe,SAAf,EAA0Bf,aAA1B,C","file":"setting.model.js","sourcesContent":["'use strict';\n\nimport mongoose from 'mongoose';\nimport {Schema} from 'mongoose';\n\n\nvar SchemeConfig = new mongoose.Schema(\n  {\n    scheme : {\n        \"type\": String,\n         enum: {\n           values: [\"asmt\",\"exam\",\"prct\",\"trng\"]\n         }\n    },\n    grade: {\n        \"type\": String,\n    },\n    exam: {\n        \"type\": String,\n    },\n    choice:[{\n    \"type\": String,\n    enum:[\"stepSwap\", \"trueFalse\", \"textBox\",\"multipleChoice\"]\n    }],\n    review: {\n    type:String,\n  // default: \"onExam\",\n    enum:[\"onExam\", \"OnQuestion\"]\n  },\n    timeout: {\n    type:String,\n  //  default: \"onExam\",\n    enum:[\"onExam\", \"OnQuestion\"]\n  },\n  clock: {\n    none : {\n        default:false,\n        type: Boolean\n    },\n     downTimerExam : {\n        default:false,\n        type: Boolean\n    },\n     downTimerQuestion : {\n        default:false,\n        type: Boolean\n    },\n     upTimerExam : {\n        default:false,\n        type: Boolean\n    },\n     upTimerQuestion : {\n        default:false,\n        type: Boolean\n    }\n    },\n     _id : false \n  }\n);\n\nvar SettingSchema = new mongoose.Schema({\n  userid: {\n          type:String,\n          unique:true,\n          \n      },\n  app: {\n      scheme:[{\n          type:String,\n        //  default: \"asmt\",\n          enum: [\"asmt\",\"exam\",\"prct\",\"trng\"]\n      }],\n      grade:[{\n          type:String,\n       //   default: \"1\",\n          enum: [\"1\",\"2\",\"3\",\"4\"]\n      }],\n        exam: [{\n        type:String,\n       // default: \"MEVAL\",\n        enum: [\"SAT\",\"GATE\",\"MEVAL\",\"RRB\"]\n        }],\n        homepage:  {\n        type:String,\n     //   default: \"grade\",\n        enum: [\"grade\",\"exam\"]\n      }, \n      level:  {\n        type:String,\n     //   default: \"int\",\n        enum: [\"int\",\"adv\"]\n      }, \n      settype:  {\n        type:String,\n      //  default: \"system\",\n        enum: [\"system\",\"user\"]\n      }\n  },\n  dev: Schema.Types.Mixed, //theme,language\n\n  schemeOptions: [SchemeConfig],\n      \n  createdAt: {\n    type: Date,\n    default: Date.now\n },\n  updatedAt: { \n    type: Date \n }\n});\n\n\n/*\nSettingSchema.pre(\"save\",function(next) {\n  if (this.scheme.length == 0)\n    this.scheme.push(\"asmt\");\n  next();\n});\n\n5.2.7\nuserSchema.pre(\"save\",function(next) {\n  if (this.permissions.indexOf(\"Show\") == -1)\n    this.permissions.push(\"Show\");\n\n  next();\n});\n\nhttp://mongoosejs.com/docs/validation.html\n\nhttp://mongoosejs.com/docs/middleware.html\n\n*/\n\n\nexport default mongoose.model('Setting', SettingSchema);"]}