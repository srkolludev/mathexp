{"version":3,"sources":["api/address/address.model.js"],"names":["AddressSchema","Schema","user","type","ObjectId","ref","storeName","String","userName","email","contactNumber","Number","homeName","homeNumber","apartmentName","streetName","landmark","city","state","country","pincode","primaryAddress","Boolean","default","tag","createdAt","Date","now","updatedAt","model"],"mappings":"AAAA;;;;;;AACA;;;;AACA;;;;AAEA,IAAIA,gBAAgB,IAAI,mBAASC,MAAb,CAAoB;AACvCC,QAAK;AACJC,UAAK,iBAAOC,QADR;AAEJC,SAAI;AAFA,GADkC;AAKvC;AACAC,aAAU;AACTH,UAAKI;AADI,GAN6B;AASvCC,YAAS;AACRL,UAAKI;AADG,GAT8B;AAYvCE,SAAM;AACLN,UAAKI;AADA,GAZiC;AAevCG,iBAAc;AACbP,UAAKQ;AADQ,GAfyB;AAkBvC;AACAC,YAAS;AACRT,UAAKI;AADG,GAnB8B;AAsBvCM,cAAW;AACVV,UAAKQ;AADK,GAtB4B;AAyBvCG,iBAAc;AACbX,UAAKI;AADQ,GAzByB;AA4BvCQ,cAAW;AACVZ,UAAKI;AADK,GA5B4B;AA+BvCS,YAAS;AACRb,UAAKI;AADG,GA/B8B;AAkCvCU,QAAK;AACJd,UAAKI;AADD,GAlCkC;AAqCvCW,SAAM;AACLf,UAAKI;AADA,GArCiC;AAwCvCY,WAAQ;AACPhB,UAAKI;AADE,GAxC+B;AA2CvCa,WAAQ;AACPjB,UAAKQ;AADE,GA3C+B;AA8CvCU,kBAAe;AACflB,UAAKmB,OADU;AAEfC,aAAQ;AAFO,GA9CwB;AAkDvCC,OAAI;AACHrB,UAAKI;AADF,GAlDmC;AAqDvCkB,aAAU;AACTtB,UAAKuB,IADI;AAETH,aAAQG,KAAKC;AAFJ,GArD6B;AAyDvCC,aAAU;AACTzB,UAAKuB;AADI;AAzD6B,CAApB,CAApB;;AA8DA,6BAAe1B,aAAf;kBACe,mBAAS6B,KAAT,CAAe,SAAf,EAA0B7B,aAA1B,C","file":"address.model.js","sourcesContent":["'use strict';\nimport mongoose from 'mongoose';\nimport {registerEvents} from './address.events';\nimport {Schema} from 'mongoose';\nvar AddressSchema = new mongoose.Schema({\n user:{\n  type:Schema.ObjectId,\n  ref:'User'\n },\n //for store \n storeName:{\n  type:String\n },\n userName:{\n  type:String\n },\n email:{\n  type:String\n },\n contactNumber:{\n  type:Number\n },\n //for employee\n homeName:{\n  type:String\n },\n homeNumber:{\n  type:Number\n },\n apartmentName:{\n  type:String\n },\n streetName:{\n  type:String\n },\n landmark:{\n  type:String\n },\n city:{\n  type:String\n },\n state:{\n  type:String\n },\n country:{\n  type:String\n },\n pincode:{\n  type:Number\n },\n primaryAddress:{\n\ttype:Boolean,\n\tdefault:false\n },\n tag:{\n  type:String\n },\n createdAt:{\n\t type:Date,\n\t default:Date.now\n },\n updatedAt:{\n\t type:Date\n }\n});\n\nregisterEvents(AddressSchema);\nexport default mongoose.model('Address', AddressSchema);\n"]}