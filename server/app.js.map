{"version":3,"sources":["app.js"],"names":["Promise","require","connect","mongo","uri","useMongoClient","connection","on","err","console","error","process","exit","app","use","secret","cookie","maxAge","name","proxy","resave","saveUninitialized","server","createServer","socketio","listen","default","startServer","angularFullstack","port","ip","log","get","exports","module"],"mappings":"AAAA;;;;AAIA;;;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAHA,mBAASA,OAAT,GAAmBC,QAAQ,UAAR,CAAnB;;;AAKA;AACA,mBAASC,OAAT,CAAiB,sBAAOC,KAAP,CAAaC,GAA9B,EAAoC,EAACC,gBAAgB,IAAjB,EAApC;AACA,mBAASC,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,UAASC,GAAT,EAAc;AAC5CC,UAAQC,KAAR,gCAA2CF,GAA3C;AACAG,UAAQC,IAAR,CAAa,CAAC,CAAd,EAF4C,CAE1B;AACnB,CAHD;;AAKA;AACA,IAAIC,MAAM,wBAAV;;AAEA;;AAEA;;AAEAA,IAAIC,GAAJ,CAAQ,8BAAQ;AACZC,UAAO,4BADK;AAEZC,UAAQ,EAAEC,QAAQ,KAAV,EAFI;AAGZC,QAAM,aAHM;AAId;AACEC,SAAO,IALK;AAMZC,UAAQ,IANI;AAOZC,qBAAmB;AAPP,CAAR,CAAR;;AAWA,IAAIC,SAAS,eAAKC,YAAL,CAAkBV,GAAlB,CAAb;AACA;;;;AAIA,IAAIW,WAAWvB,QAAQ,WAAR,EAAqBwB,MAArB,CAA4BH,MAA5B,CAAf;;AAEArB,QAAQ,mBAAR,EAA6ByB,OAA7B,CAAqCF,QAArC;AACAvB,QAAQ,kBAAR,EAA4ByB,OAA5B,CAAoCb,GAApC;AACAZ,QAAQ,UAAR,EAAoByB,OAApB,CAA4Bb,GAA5B;;AAEA;AACA,SAASc,WAAT,GAAuB;AACrBd,MAAIe,gBAAJ,GAAuBN,OAAOG,MAAP,CAAc,sBAAOI,IAArB,EAA2B,sBAAOC,EAAlC,EAAsC,YAAW;AACtErB,YAAQsB,GAAR,CAAY,4CAAZ,EAA0D,sBAAOF,IAAjE,EAAuEhB,IAAImB,GAAJ,CAAQ,KAAR,CAAvE;AACD,GAFsB,CAAvB;AAGD;AACD;AACA;AACA,4BAAaL,WAAb;;AAEA;AACAM,UAAUC,OAAOD,OAAP,GAAiBpB,GAA3B","file":"app.js","sourcesContent":["/**\n * Main application file\n */\n\n'use strict';\n\nimport express from 'express';\nimport session from 'express-session';\nimport mongoose from 'mongoose';\nmongoose.Promise = require('bluebird');\nimport config from './config/environment';\nimport http from 'http';\nimport seedDatabaseIfNeeded from './config/seed.qn';\n\n// Connect to MongoDB\nmongoose.connect(config.mongo.uri,  {useMongoClient: true});\nmongoose.connection.on('error', function(err) {\n  console.error(`MongoDB connection error: ${err}`);\n  process.exit(-1); // eslint-disable-line no-process-exit\n});\n\n// Setup server\nvar app = express();\n\n//app.use(session());\n\n//app.use(session({ secret: 'this-is-a-xxx-secret-token', cookie: { maxAge: 60000 }}));\n\napp.use(session({\n    secret:'this-is-a-xxx-secret-token',\n    cookie: { maxAge: 60000 },\n    name: 'cookie_name',\n  //  store: sessionStore, // connect-mongo session store\n    proxy: true,\n    resave: true,\n    saveUninitialized: true\n}));\n\n\nvar server = http.createServer(app);\n/*var socketio = require('socket.io')(server, {\n  serveClient: config.env !== 'production',\n  path: '/socket.io-client'\n});*/\nvar socketio = require('socket.io').listen(server);\n\nrequire('./config/socketio').default(socketio);\nrequire('./config/express').default(app);\nrequire('./routes').default(app);\n\n// Start server\nfunction startServer() {\n  app.angularFullstack = server.listen(config.port, config.ip, function() {\n    console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\n  });\n}\n//remove comment when want to use seed db\nseedDatabaseIfNeeded();\nsetImmediate(startServer);\n\n// Expose app\nexports = module.exports = app;\n"]}