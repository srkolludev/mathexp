{"version":3,"sources":["api/news/news.controller.js"],"names":["index","show","create","upsert","patch","destroy","customTitle","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","find","populate","exec","catch","findById","params","id","body","_id","findOneAndUpdate","new","setDefaultsOnInsert","runValidators","title","$regex","$options","data"],"mappings":"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","file":"news.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/news              ->  index\n * POST    /api/news              ->  create\n * GET     /api/news/:id          ->  show\n * PUT     /api/news/:id          ->  upsert\n * PATCH   /api/news/:id          ->  patch\n * DELETE  /api/news/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport News from './news.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          return res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Newss\nexport function index(req, res) {\n  return News.find().populate('image', 'PublicID').exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single News from the DB\nexport function show(req, res) {\n  return News.findById(req.params.id).populate('image', 'PublicID').exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new News in the DB\nexport function create(req, res) {\n  return News.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given News in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return News.findOneAndUpdate({_id: req.params.id}, req.body, {new: true, upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing News in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return News.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a News from the DB\nexport function destroy(req, res) {\n  return News.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n\n//Custom search by category name\nexport function customTitle(req,res){\n  //menuitem instead of menuitem name required\n  News.find({ title: { $regex:req.body.title,$options: 'i' } } ).exec(function(err,data){\n    if(err){\n     return handleError(res);\n    }\n    else{\n      res.json(data);\n    }\n  })\n}\n"]}